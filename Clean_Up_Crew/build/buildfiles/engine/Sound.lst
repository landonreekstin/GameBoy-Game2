                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module Sound
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _sound_setup
                                     12 	.globl _play_sound
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                           000000    44 	G$sound_setup$0$0	= .
                                     45 	.globl	G$sound_setup$0$0
                           000000    46 	C$Sound.c$17$0_0$101	= .
                                     47 	.globl	C$Sound.c$17$0_0$101
                                     48 ;src/engine/Sound.c:17: void sound_setup(void) 
                                     49 ;	---------------------------------
                                     50 ; Function sound_setup
                                     51 ; ---------------------------------
      000000                         52 _sound_setup::
                           000000    53 	C$Sound.c$19$1_0$101	= .
                                     54 	.globl	C$Sound.c$19$1_0$101
                                     55 ;src/engine/Sound.c:19: NR52_REG = 0x80; // enable sound
      000000 3E 80                   56 	ld	a, #0x80
      000002 E0r00                   57 	ldh	(_NR52_REG + 0), a
                           000004    58 	C$Sound.c$20$1_0$101	= .
                                     59 	.globl	C$Sound.c$20$1_0$101
                                     60 ;src/engine/Sound.c:20: NR50_REG = 0x77; // set volume for both channels to max
      000004 3E 77                   61 	ld	a, #0x77
      000006 E0r00                   62 	ldh	(_NR50_REG + 0), a
                           000008    63 	C$Sound.c$21$1_0$101	= .
                                     64 	.globl	C$Sound.c$21$1_0$101
                                     65 ;src/engine/Sound.c:21: NR51_REG = 0xFF; // select channels to use
      000008 3E FF                   66 	ld	a, #0xff
      00000A E0r00                   67 	ldh	(_NR51_REG + 0), a
                           00000C    68 	C$Sound.c$22$1_0$101	= .
                                     69 	.globl	C$Sound.c$22$1_0$101
                                     70 ;src/engine/Sound.c:22: }
                           00000C    71 	C$Sound.c$22$1_0$101	= .
                                     72 	.globl	C$Sound.c$22$1_0$101
                           00000C    73 	XG$sound_setup$0$0	= .
                                     74 	.globl	XG$sound_setup$0$0
      00000C C9                      75 	ret
                           00000D    76 	G$play_sound$0$0	= .
                                     77 	.globl	G$play_sound$0$0
                           00000D    78 	C$Sound.c$24$1_0$103	= .
                                     79 	.globl	C$Sound.c$24$1_0$103
                                     80 ;src/engine/Sound.c:24: void play_sound(Sound *s) 
                                     81 ;	---------------------------------
                                     82 ; Function play_sound
                                     83 ; ---------------------------------
      00000D                         84 _play_sound::
                           00000D    85 	C$Sound.c$26$1_0$103	= .
                                     86 	.globl	C$Sound.c$26$1_0$103
                                     87 ;src/engine/Sound.c:26: NR10_REG = s-> freqSweep;
      00000D F8 02                   88 	ldhl	sp,	#2
      00000F 2A                      89 	ld	a, (hl+)
      000010 4F                      90 	ld	c, a
      000011 46                      91 	ld	b, (hl)
      000012 0A                      92 	ld	a, (bc)
      000013 E0r00                   93 	ldh	(_NR10_REG + 0), a
                           000015    94 	C$Sound.c$27$1_0$103	= .
                                     95 	.globl	C$Sound.c$27$1_0$103
                                     96 ;src/engine/Sound.c:27: NR11_REG = s-> dutyAndLength;
      000015 59                      97 	ld	e, c
      000016 50                      98 	ld	d, b
      000017 13                      99 	inc	de
      000018 1A                     100 	ld	a, (de)
      000019 E0r00                  101 	ldh	(_NR11_REG + 0), a
                           00001B   102 	C$Sound.c$28$1_0$103	= .
                                    103 	.globl	C$Sound.c$28$1_0$103
                                    104 ;src/engine/Sound.c:28: NR12_REG = s-> volEnvelope;
      00001B 59                     105 	ld	e, c
      00001C 50                     106 	ld	d, b
      00001D 13                     107 	inc	de
      00001E 13                     108 	inc	de
      00001F 1A                     109 	ld	a, (de)
      000020 E0r00                  110 	ldh	(_NR12_REG + 0), a
                           000022   111 	C$Sound.c$29$1_0$103	= .
                                    112 	.globl	C$Sound.c$29$1_0$103
                                    113 ;src/engine/Sound.c:29: NR13_REG = s-> freqlsb;
      000022 59                     114 	ld	e, c
      000023 50                     115 	ld	d, b
      000024 13                     116 	inc	de
      000025 13                     117 	inc	de
      000026 13                     118 	inc	de
      000027 1A                     119 	ld	a, (de)
      000028 E0r00                  120 	ldh	(_NR13_REG + 0), a
                           00002A   121 	C$Sound.c$30$1_0$103	= .
                                    122 	.globl	C$Sound.c$30$1_0$103
                                    123 ;src/engine/Sound.c:30: NR14_REG = s-> pbAndFreqMsb;
      00002A 03                     124 	inc	bc
      00002B 03                     125 	inc	bc
      00002C 03                     126 	inc	bc
      00002D 03                     127 	inc	bc
      00002E 0A                     128 	ld	a, (bc)
      00002F E0r00                  129 	ldh	(_NR14_REG + 0), a
                           000031   130 	C$Sound.c$31$1_0$103	= .
                                    131 	.globl	C$Sound.c$31$1_0$103
                                    132 ;src/engine/Sound.c:31: }
                           000031   133 	C$Sound.c$31$1_0$103	= .
                                    134 	.globl	C$Sound.c$31$1_0$103
                           000031   135 	XG$play_sound$0$0	= .
                                    136 	.globl	XG$play_sound$0$0
      000031 C9                     137 	ret
                                    138 	.area _CODE
                                    139 	.area _INITIALIZER
                                    140 	.area _CABS (ABS)
